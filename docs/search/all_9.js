var searchData=
[
  ['matmulnode_0',['matmulnode',['../classMatMulNode.html',1,'MatMulNode'],['../classMatMulNode.html#ac6d4e05fc40c8a512ea5f66a3bc3f9e0',1,'MatMulNode::MatMulNode(std::string A, std::string B, std::string Y)'],['../classMatMulNode.html#a6033277bbec6d1b4424d1cde355b3a12',1,'MatMulNode::MatMulNode(const nlohmann::json &amp;node)']]],
  ['matrix_5fmatch_1',['matrix_match',['../classTensor.html#a96071f07e594af2988f0677731c8381d',1,'Tensor::matrix_match()'],['../classTensor__mml.html#a31eae4944695a67a4d98278ce9824ab5',1,'Tensor_mml::matrix_match()']]],
  ['maxpoolnode_2',['maxpoolnode',['../classMaxPoolNode.html',1,'MaxPoolNode'],['../classMaxPoolNode.html#aca3064791e233c81c5763c10466b3c29',1,'MaxPoolNode::MaxPoolNode(std::string X, std::string Y, std::vector&lt; int &gt; kernel_shape, std::optional&lt; std::string &gt; indices=std::nullopt, std::string auto_pad=&quot;NOTSET&quot;, int ceil_mode=0, std::vector&lt; int &gt; dilations={}, std::vector&lt; int &gt; pads={}, int storage_order=0, std::vector&lt; int &gt; strides={})'],['../classMaxPoolNode.html#ac7ee724ad263b27ffa2df9cf79e6e5db',1,'MaxPoolNode::MaxPoolNode(const nlohmann::json &amp;node)']]],
  ['model_3',['Model',['../classModel.html',1,'']]],
  ['model_5fmml_4',['model_mml',['../classModel__mml.html',1,'Model_mml'],['../classModel__mml.html#aab13ce4bb2666865c8964036b3a8a561',1,'Model_mml::Model_mml()=default'],['../classModel__mml.html#a6c769627f2f4622fee3dd4767b75c75a',1,'Model_mml::Model_mml(std::vector&lt; std::shared_ptr&lt; Node &gt; &gt; initialNodes, std::unordered_map&lt; std::string, GeneralDataTypes &gt; iomap, std::vector&lt; std::string &gt; inputs, std::vector&lt; std::string &gt; outputs)']]],
  ['multiply_5',['multiply',['../classTensorOperations.html#a2f2c2beab94d4b4ed3c9c80b3d9ccca2',1,'TensorOperations']]]
];
