#pragma once

#include <algorithm>
#include <chrono>
#include <cmath>
#include <functional>
#include <initializer_list>
#include <iostream>
#include <memory>
#include <nlohmann/json.hpp>
#include <numeric>
#include <optional>
#include <random>
#include <stdexcept>
#include <string>
#include <tuple>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
#include <variant>

#include "backend/data_parser.hpp"
#include "backend/model.hpp"
#include "backend/dataloader/a_data_loader.hpp"
#include "backend/dataloader/a_image_resizer_and_cropper.hpp"
#include "backend/dataloader/a_normalizer.hpp"
#include "backend/dataloader/data_loader_config.hpp"
#include "backend/dataloader/image_loader.hpp"
#include "backend/dataloader/normalizer.hpp"
#include "backend/dataloader/resize_and_cropper.hpp"
#include "datastructures/tensor.hpp"
#include "datastructures/array_utils.hpp"
#include "datastructures/mml_array.hpp"
#include "datastructures/tensor_operations.hpp"
#include "datastructures/tensor_utils.hpp"
#include "nodes/a_node.hpp"
#include "nodes/add.hpp"
#include "nodes/avg_pool.hpp"
#include "nodes/global_avg_pool.hpp"
#include "nodes/conv.hpp"
#include "nodes/dropout.hpp"
#include "nodes/elu.hpp"
#include "nodes/flatten.hpp"
#include "nodes/gelu.hpp"
#include "nodes/gemm.hpp"
#include "nodes/leaky_relu.hpp"
#include "nodes/log_softmax.hpp"
#include "nodes/lrn.hpp"
#include "nodes/max_pool.hpp"
#include "nodes/relu.hpp"
#include "nodes/reshape.hpp"
#include "nodes/sigmoid.hpp"
#include "nodes/swish.hpp"
#include "nodes/tanh.hpp"
#include "nodes/matmul.hpp"
#include "nodes/transpose.hpp"
#include "utility/base64.hpp"
#include "utility/profiler.hpp"
// IWYU pragma: no_include <__vector/vector.h>
#include <vector>  // IWYU pragma: keep